apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: fluent-bit
  namespace: kube-infra
spec:
  chart:
    spec:
      chart: fluent-bit
      sourceRef:
        kind: HelmRepository
        name: fluent
        namespace: kube-infra
  interval: 10m0s
  dependsOn:
    - name: kube-prometheus-stack
  values:
    serviceMonitor:
      enabled: true
      namespace: kube-infra
      interval: 10s
      scrapeTimeout: 10s
      jobLabel: fluentbit
      selector:
        prometheus: default
        release: kube-prometheus-stack
      ## metric relabel configs to apply to samples before ingestion.
      ##
      metricRelabelings:
        - sourceLabels: [__meta_kubernetes_service_label_cluster]
          targetLabel: cluster
          regex: (.*)
          replacement: ${1}
          action: replace
      ## relabel configs to apply to samples after ingestion.
      ##
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: ^(.*)$
          targetLabel: nodename
          replacement: $1
          action: replace
    prometheusRule:
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
      rules:
      - alert: NoOutputBytesProcessed
        expr: rate(fluentbit_output_proc_bytes_total[5m]) == 0
        annotations:
          message: |
            Fluent Bit instance {{ $labels.instance }}'s output plugin {{ $labels.name }} has not processed any
            bytes for at least 15 minutes.
          summary: No Output Bytes Processed
        for: 15m
        labels:
          severity: critical
    dashboards:
      enabled: true
    tolerations: 
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
    podLabels:
      - name: cluster-name
        value: cluster-name
    env:
      - name: KUBERNETES_CLUSTER_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['cluster-name']
    luaScripts:
      build_job_value.lua |
          print("Build job value...")
          function build_job_value(tag, timestamp, record) 
            new_record = record new_record["job"] = record["kubernetes_cluster_name"] .. "/" .. record["kubernetes_namespace_name"] 
            return 1, timestamp, new_record 
          end
    config:
      filters: |
        [FILTER]
            Name modify
            Match kube.*
            Rename log msg

        [FILTER]
            Name kubernetes
            Match kube.*
            Merge_Log On
            Keep_Log Off
            K8S-Logging.Parser On
            K8S-Logging.Exclude On

        [FILTER]
            Name nest
            Match *
            Operation lift
            Nested_under kubernetes
            Add_prefix kubernetes_

        [FILTER]
            Name nest
            Match *
            Operation lift
            Nested_under kubernetes_labels
            Add_prefix kubernetes_labels_

        [FILTER]
            Name  record_modifier
            Match *
            Record kubernetes_cluster_name ${KUBERNETES_CLUSTER_NAME}

        [FILTER]
            Name Lua
            Match *
            script /fluent-bit/scripts/build_job_value.lua
            call build_job_value

        [FILTER]
            Name modify
            Match *

            Condition Key_Does_Not_Exist kubernetes_labels_app.kubernetes.io/name
            Condition Key_Does_Not_Exist kubernetes_labels_k8s-app
            Condition Key_Exists kubernetes_labels_app

            Rename kubernetes_labels_app kubernetes_labels_app.kubernetes.io/name

        [FILTER]
            Name modify
            Match *

            Condition Key_Does_Not_Exist kubernetes_labels_app.kubernetes.io/name
            Condition Key_Does_Not_Exist kubernetes_labels_app
            Condition Key_Exists kubernetes_labels_k8s-app

            Rename kubernetes_labels_k8s-app kubernetes_labels_app.kubernetes.io/name


        [FILTER]
            Name modify
            Match*

            Condition Key_Does_Not_Exist kubernetes_labels_app.kubernetes.io/name
            Condition Key_Does_Not_Exist kubernetes_labels_app
            Condition Key_Does_Not_Exist kubernetes_labels_k8s-app
            Condition Key_Exists kubernetes_pod_name

            Rename kubernetes_pod_name kubernetes_labels_app.kubernetes.io/name

        [FILTER]
            Name nest
            Match *
            Operation nest
            Wildcard kubernetes_labels_*
            Nest_under kubernetes_labels
            Remove_prefix kubernetes_labels_

        [FILTER]
            Name nest
            Match *
            Operation nest
            Wildcard kubernetes_*
            Nest_under kubernetes
            Remove_prefix kubernetes_

        [FILTER]
            Name modify
            Match *
            Remove_wildcard kubernetes_
      outputs: |
        [OUTPUT]
            Name loki
            Match kube.*
            host loki
            port 3100
            tenant_id ""
            labels type=k8s, stream=$stream, node_name=$kubernetes['host'], namespace=$kubernetes['namespace_name'], pod=$kubernetes['pod_name'], container=$kubernetes['container_name'], app=$kubernetes['labels']['app.kubernetes.io/name'], cluster=io
            auto_kubernetes_labels off
            line_format json